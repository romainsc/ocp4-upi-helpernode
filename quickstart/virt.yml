---
- hosts: host
  vars_files:
    - vault.yaml
    - vars_template.yaml
  vars:
    stpool: virtual_machines_vg
  tasks:
   - name: List all VMs
     virt:
       command: list_vms
     register: all_vms
   - name: get vms info
     virt:
       name: "{{ item }}"
       command: get_xml
     with_items: "{{ all_vms['list_vms'] }}"
     register: all_vms_xml
   - name: get mac address
     xml:
       xmlstring: "{{ item['get_xml'] }}"
       xpath: /domain/devices/interface/mac
       content: attribute
     with_items: "{{ all_vms_xml['results'] }}"
     register: mac_addresses_results
   - name: init the mac addresses list
     set_fact:
       mac_addresses: []
   - name: create the mac addresses list
     set_fact:
       mac_addresses: "{{ mac_addresses + [item['matches'][0]['mac']['address']] }}"
     with_items: "{{ mac_addresses_results['results'] }}"
   - name: init the mac addresses list/name map
     set_fact:
       mac_with_name: {}
   - name: Name the mac address
     set_fact:
       mac_with_name: "{{ mac_with_name|combine({item: {'macaddr': mac_addresses[index]}}) }}"
     loop: "{{ all_vms['list_vms']|flatten(levels=1) }}"
     loop_control:
      index_var: index
   - debug:
      var: mac_with_name
   - name: Write the mac config file
     copy:
      content: "{{ mac_with_name }}"
      dest: mac_addresses_var.yml
   - name: Fetch the config file
     fetch:
      src: mac_addresses_var.yml
      dest: ../vars/mac_addresses.yml
      flat: yes

 
